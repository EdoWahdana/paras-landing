steps:
  - id: 'get gke credential'
    name: 'gcr.io/${PROJECT_ID}/deployment-previews' # our custom builder
    secretEnv: ['GKE_SA_KEY', 'GKE_CLUSTER', 'GKE_ZONE']
    args:
      [
        'curl',
        '-sfLo',
        'kubectl',
        'https://dl.k8s.io/releases/',
        '-L',
        '-s',
        'https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl',
      ]

  - id: 'set permission kubectl'
    name: 'gcr.io/${PROJECT_ID}/deployment-previews' # our custom builder
    entrypoint: 'bash'
    args: ['chmod', 'u+x', './kubectl']

  - id: 'get env from configmap'
    name: 'gcr.io/${PROJECT_ID}/deployment-previews' # our custom builder
    entrypoint: 'bash'
    args:
      [
        './kubectl',
        'get',
        'configmap',
        '"config-$$GKE_NAMESPACE-$$GKE_DEPLOYMENT_NAME"',
        '-n',
        '$$GKE_NAMESPACE',
        '-o',
        'go-template="{{range $k,$v := .data}}{{printf "%s=" $k}}{{if not $v}}{{$v}}{{else}}{{$v}}{{end}}{{"\n"}}{{end}}"',
        '>',
        'env.temp',
      ]
    secretEnv: ['GKE_NAMESPACE', 'GKE_DEPLOYMENT_NAME']

  - id: 'build image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${_PR_NUMBER}-${SHORT_SHA}', '.']

  - id: 'push image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${_PR_NUMBER}-${SHORT_SHA}']

  - id: 'deploy revision with tag'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'run',
        'deploy',
        '${_SERVICE_NAME}',
        '--platform',
        'managed',
        '--region',
        '${_REGION}',
        '--image',
        'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${_PR_NUMBER}-${SHORT_SHA}',
        '--tag',
        'pr-${_PR_NUMBER}',
        '--no-traffic',
      ]

  - id: 'link revision on pull request'
    name: 'gcr.io/${PROJECT_ID}/deployment-previews' # our custom builder
    secretEnv: ['GITHUB_TOKEN']
    args:
      [
        'set',
        '--project-id',
        '${PROJECT_ID}',
        '--region',
        '${_REGION}',
        '--service',
        '${_SERVICE_NAME}',
        '--pull-request',
        '${_PR_NUMBER}',
        '--repo-name',
        '${_GITHUB_REPO}',
        '--commit-sha',
        '${SHORT_SHA}',
      ]

substitutions:
  _SERVICE_NAME: myservice
  _REGION: us-central1
  _GITHUB_REPO: $(pull_request.pull_request.head.repo.full_name)

options:
  dynamicSubstitutions: true

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: 'GITHUB_TOKEN'
    - versionName: projects/$PROJECT_ID/secrets/gke_sa_key/versions/latest
      env: 'GKE_SA_KEY'
    - versionName: projects/$PROJECT_ID/secrets/gke_cluster/versions/latest
      env: 'GKE_CLUSTER'
    - versionName: projects/$PROJECT_ID/secrets/gke_zone/versions/latest
      env: 'GKE_ZONE'
    - versionName: projects/$PROJECT_ID/secrets/gke_namespace/versions/latest
      env: 'GKE_NAMESPACE'
    - versionName: projects/$PROJECT_ID/secrets/gke_deployment_name/versions/latest
      env: 'GKE_DEPLOYMENT_NAME'
